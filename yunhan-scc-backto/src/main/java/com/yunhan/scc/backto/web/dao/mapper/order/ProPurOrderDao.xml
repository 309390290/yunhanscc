<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	@author wangtao 
	@version 2016-7-6 14:10:29 
-->
<mapper namespace="com.yunhan.scc.backto.web.dao.mapper.order.ProPurOrderDao">
	<!-- 订单总目实体映射 -->
	<resultMap type="ProPurOrderSummaryBacktoDO" id="ProPurOrderSummaryBacktoResult">
		<result property="addDate" column="ADD_DATE" />
		<result property="addTime" column="ADD_TIME" />
		<result property="addUser" column="ADD_USER" />
		<result property="addUserCode" column="ADD_USER_CODE" />
		<result property="addUserPhoneno" column="ADD_USER_PHONENO" />
		<result property="availableQty" column="AVAILABLE_QTY" />
		<result property="availableRate" column="AVAILABLE_RATE" />
		<result property="businessType" column="BUSINESS_TYPE" />
		<result property="closeReason" column="CLOSE_REASON" />
		<result property="destination" column="DESTINATION" />
		<result property="expiryDate" column="EXPIRY_DATE" />
		<result property="id" column="ID" />
		<result property="isDeal" column="IS_DEAL" />
		<result property="isExport" column="IS_EXPORT" />
		<result property="isNew" column="IS_NEW" />
		<result property="isOrderComplete" column="IS_ORDER_COMPLETE" />
		<result property="isSupplement" column="IS_SUPPLEMENT" />
		<result property="isView" column="IS_VIEW" />
		<result property="orderDifference" column="ORDER_DIFFERENCE" />
		<result property="orderRemark" column="ORDER_REMARK" />
		<result property="orderStatus" column="ORDER_STATUS" />
		<result property="orderType" column="ORDER_TYPE" />
		<result property="purchaserId" column="PURCHASER_ID" />
		<result property="purchaseOrderCode" column="PURCHASE_ORDER_CODE" />
		<result property="receiveAddress" column="RECEIVE_ADDRESS" />
		<result property="receiveContactUser" column="RECEIVE_CONTACT_USER" />
		<result property="receiveDept" column="RECEIVE_DEPT" />
		<result property="receivePhoneno" column="RECEIVE_PHONENO" />
		<result property="receiveQty" column="RECEIVE_QTY" />
		<result property="receiveRate" column="RECEIVE_RATE" />
		<result property="reqArriveDate" column="REQ_ARRIVE_DATE" />
		<result property="sendoutGoodsCode" column="SENDOUT_GOODS_CODE" />
		<result property="sendoutQty" column="SENDOUT_QTY" />
		<result property="sendoutRate" column="SENDOUT_RATE" />
		<result property="sendDate" column="SEND_DATE" />
		<result property="sendGoodsType" column="SEND_GOODS_TYPE" />
		<result property="sendUser" column="SEND_USER" />
		<result property="sourceType" column="SOURCE_TYPE" />
		<result property="supplierId" column="SUPPLIER_ID" />
		<result property="totalBookQty" column="TOTAL_BOOK_QTY" />
		<result property="totalPrice" column="TOTAL_PRICE" />
		<result property="totalRealityPrice" column="TOTAL_REALITY_PRICE" />
		<result property="totalVarietyQty" column="TOTAL_VARIETY_QTY" />
		<result property="updateTime" column="UPDATE_TIME" />
		<result property="updateUserCode" column="UPDATE_USER_CODE" />
		<result property="urgentFlag" column="URGENT_FLAG" />
		<result property="warehouse" column="WAREHOUSE" />
		<result property="yunhanOrderCode" column="YUNHAN_ORDER_CODE" />
		<result property="untreated" column="UNTREATED" />
		<result property="alreadyProcessed" column="ALREADYPROCESSED" />
		<result property="purchaserName" column="purchaserName" />
	</resultMap>
	<!-- 订单细目实体映射 -->
	<resultMap type="ProPurOrderItemsBacktoDO" id="ProPurOrderItemsBacktoResult">
			<result property="addDate" column="ADD_DATE" />
			<result property="addTime" column="ADD_TIME" />
			<result property="addUserCode" column="ADD_USER_CODE" />
			<result property="affiliateSeries" column="AFFILIATE_SERIES" />
			<result property="authorEditor" column="AUTHOR_EDITOR" />
			<result property="bookTitle" column="BOOK_TITLE" />
			<result property="closeCounter" column="CLOSE_COUNTER" />
			<result property="closeReason" column="CLOSE_REASON" />
			<result property="closeStatus" column="CLOSE_STATUS" />
			<result property="controlFlag" column="CONTROL_FLAG" />
			<result property="discountrate" column="DISCOUNTRATE" />
			<result property="id" column="ID" />
			<result property="impression" column="IMPRESSION" />
			<result property="isbn" column="ISBN" />
			<result property="isDeal" column="IS_DEAL" />
			<result property="isExport" column="IS_EXPORT" />
			<result property="isImportent" column="IS_IMPORTENT" />
			<result property="isSuitBook" column="IS_SUIT_BOOK" />
			<result property="isValid" column="IS_VALID" />
			<result property="isView" column="IS_VIEW" />
			<result property="marketingCategories" column="MARKETING_CATEGORIES" />
			<result property="notSendoutQty" column="NOT_SENDOUT_QTY" />
			<result property="orderQty" column="ORDER_QTY" />
			<result property="orderTermNo" column="ORDER_TERM_NO" />
			<result property="paperback" column="PAPERBACK" />
			<result property="price" column="PRICE" />
			<result property="publisher" column="PUBLISHER" />
			<result property="purchaserCommoditiesId" column="PURCHASER_COMMODITIES_ID" />
			<result property="purchaserId" column="PURCHASER_ID" />
			<result property="purchaseOrderCode" column="PURCHASE_ORDER_CODE" />
			<result property="realitySalePrice" column="REALITY_SALE_PRICE" />
			<result property="receiveDate" column="RECEIVE_DATE" />
			<result property="receiveQty" column="RECEIVE_QTY" />
			<result property="remark" column="REMARK" />
			<result property="rowUniqueNo" column="ROW_UNIQUE_NO" />
			<result property="salesPrices" column="SALES_PRICES" />
			<result property="salePrice" column="SALE_PRICE" />
			<result property="sendoutDate" column="SENDOUT_DATE" />
			<result property="sendoutGoodsCode" column="SENDOUT_GOODS_CODE" />
			<result property="sendoutQty" column="SENDOUT_QTY" />
			<result property="sendDate" column="SEND_DATE" />
			<result property="sendScheme" column="SEND_SCHEME" />
			<result property="seriesTitle" column="SERIES_TITLE" />
			<result property="sourceType" column="SOURCE_TYPE" />
			<result property="status" column="STATUS" />
			<result property="subscriptionCode" column="SUBSCRIPTION_CODE" />
			<result property="supplierCommoditiesId" column="SUPPLIER_COMMODITIES_ID" />
			<result property="supplierId" column="SUPPLIER_ID" />
			<result property="updateTime" column="UPDATE_TIME" />
			<result property="updateUserCode" column="UPDATE_USER_CODE" />
			<result property="urgentFlag" column="URGENT_FLAG" />
			<result property="versionNo" column="VERSION_NO" />
			<result property="warehouse" column="WAREHOUSE" />
			<result property="yunhanId" column="YUNHAN_ID" />
			<result property="yunhanOrderCode" column="YUNHAN_ORDER_CODE" />
			<result property="notEnoughReason" column="notEnoughReason" />
			<result property="orderType" column="orderType" />
			<result property="sendGoodsType" column="sendGoodsType" />
			<result property="rePrice" column="rePrice" />
			<result property="reDiscountrate" column="reDiscountrate" />
			<result property="isNew" column="IS_NEW" />
			<result property="availablePrice" column="AVAILABLE_PRICE" />
			<result property="summaryId" column="summaryId" />
			<result property="availableReason" column="OTHER_AVAILABLE_REASON" />
			
			<result property="thisSendQty" column="THIS_SEND_QTY" />
			<result property="historyOtherAvailableReason" column="HISTORY_OTHER_AVAILABLE_REASON" />
			<result property="historyAvailablePrice" column="history_Available_Price" />
			<result property="historyAvailableDiscountrate" column="history_Available_Discountrate" />
			<result property="historyPreSendDate" column="history_Pre_Send_Date" />
			<result property="historyResponseRemark" column="history_Response_Remark" />
			<result property="preSendDate" column="PRE_SEND_DATE" />
			<result property="responseRemark" column="RESPONSE_REMARK" />
			<result property="availableDiscountrate" column="Available_Discountrate" />
			
	</resultMap>
	
	
	<!-- 总目 -->
	<select id="queryPendingOrderSummaryByPage" resultMap="ProPurOrderSummaryBacktoResult" 
		parameterType="ProPurOrderSummaryBacktoCondition">
		SELECT TPPOS.ADD_DATE,
       TPPOS.ADD_TIME,
       TPPOS.ADD_USER,
       TPPOS.ADD_USER_CODE,
       TPPOS.ADD_USER_PHONENO,
       TPPOS.AVAILABLE_QTY,
       TPPOS.AVAILABLE_RATE,
       TPPOS.BUSINESS_TYPE,
       TPPOS.CLOSE_REASON,
       TPPOS.DESTINATION,
       TPPOS.EXPIRY_DATE,
       TPPOS.ID,
       <!-- TPPOS.IS_DEAL, -->
       (case
                when TPPOS.IS_DEAL = 'Y' then
                 'Y'
                when TPPOS.IS_DEAL = 'N' AND PIS.CONTROL_FLAG = 0 then
                 'N'
                when TPPOS.IS_DEAL = 'N' AND PIS.CONTROL_FLAG > 0 then
                 'A'
              end) IS_DEAL,
       (CASE WHEN PIS.ZS - PIS.YDC  > 0  
       		THEN 'N' ELSE 'Y'
        END) as IS_EXPORT,
     <!--   TPPOS.IS_EXPORT, -->
       TPPOS.IS_NEW,
       TPPOS.IS_ORDER_COMPLETE,
       TPPOS.IS_SUPPLEMENT,
       TPPOS.IS_VIEW,
       TPPOS.ORDER_DIFFERENCE,
       TPPOS.ORDER_REMARK,
       TPPOS.ORDER_STATUS,
       TPPOS.ORDER_TYPE,
       TPPOS.PURCHASER_ID,
       TPPOS.PURCHASE_ORDER_CODE,
       TPPOS.RECEIVE_ADDRESS,
       TPPOS.RECEIVE_CONTACT_USER,
       TPPOS.RECEIVE_DEPT,
       TPPOS.RECEIVE_PHONENO,
       TPPOS.RECEIVE_QTY,
       TPPOS.RECEIVE_RATE,
       TPPOS.REQ_ARRIVE_DATE,
       TPPOS.SENDOUT_GOODS_CODE,
       TPPOS.SENDOUT_QTY,
       TPPOS.SENDOUT_RATE,
       TPPOS.SEND_DATE,
       TPPOS.SEND_GOODS_TYPE,
       TPPOS.SEND_USER,
       TPPOS.SOURCE_TYPE,
       TPPOS.SUPPLIER_ID,
       TPPOS.TOTAL_BOOK_QTY,
       TPPOS.TOTAL_PRICE,
       TPPOS.TOTAL_REALITY_PRICE,
       pis.zs as TOTAL_VARIETY_QTY,
       <!-- TPPOS.TOTAL_VARIETY_QTY, -->
       TPPOS.WAREHOUSE,
       TPPOS.YUNHAN_ORDER_CODE,
       TPPOS.URGENT_FLAG,
       PIS.WCL untreated,
       PIS.ZS - PIS.WCL alreadyProcessed
  FROM PRO_PUR_ORDER_SUMMARY TPPOS,
       (SELECT SUM(CASE
             WHEN UPPER(PI.Is_Deal) = 'N' AND UPPER(PI.IS_VALID) = 'Y' 
             THEN
              1
             ELSE
              0
           END) WCL,
       SUM(CASE
             WHEN nodeload.is_export = 'Y' THEN
              1
             ELSE
              0
           END) YDC,
	       COUNT(1) ZS,
	       PI.PURCHASE_ORDER_CODE,
	       PI.PURCHASER_ID,
		   PI.SUPPLIER_ID,
		   sum(CONTROL_FLAG) CONTROL_FLAG
		  FROM PRO_PUR_ORDER_ITEMS PI, NODE_USER_DATA_REL nodeload
		 where to_char(pi.id) = nodeload.data_id(+)
		   and nodeload.node_bsn_tp_cd(+) = 'HGFH' <!-- 声明下载节点标识为回告发货 -->
		   and nodeload.data_type(+) ='ORDER' <!-- 声明下载类型标识为订单 -->
		   and PI.STATUS not in ('50')
		   <if test="sendGoodsType!=null">
				AND PI.IS_DEAL = 'N'
                AND PI.IS_VALID = 'Y'
			</if>
		<!--    and nodeload.user_code(+) = '2200059PQ' --><!-- 声明下载人员（暂时不用） -->
		 GROUP BY PI.PURCHASE_ORDER_CODE, PI.PURCHASER_ID, PI.SUPPLIER_ID) PIS
		<where>
		 	PIS.PURCHASE_ORDER_CODE = TPPOS.PURCHASE_ORDER_CODE
			AND PIS.PURCHASER_ID = TPPOS.PURCHASER_ID
			AND PIS.SUPPLIER_ID = TPPOS.SUPPLIER_ID
			AND TPPOS.ORDER_STATUS NOT IN (0,5,40,45,47,50)
			AND TPPOS.IS_SUPPLEMENT = 'N' <!-- modify by wld 2016-10-17 排除补单数据 -->
			<if test="purchaserId!=null">
				AND TPPOS.PURCHASER_ID = #{purchaserId}
			</if>
			<if test="warehouse!=null">
				<if test="warehouse== 'QITA'">
					AND (TPPOS.WAREHOUSE NOT IN (
					SELECT T.CODE
					FROM DC_LOCATION T
					WHERE T.NODE_LEVEL = 3
					START WITH T.CODE = #{purchaserId}
					AND T.STATUS = 0
					CONNECT BY PRIOR T.ID = T.PARENT_ID
					) or TPPOS.WAREHOUSE is null)
				</if>
				<if test="warehouse!='QITA'">
					AND TPPOS.WAREHOUSE = #{warehouse}
				</if>
			</if>
			<if  test="warehouses!=null">
				AND TPPOS.WAREHOUSE in
				<foreach collection="warehouses" item="warehouseItem"  open="(" separator="," close=")">  
			           #{warehouseItem}  
			     </foreach>	
			</if>
			<if test="isNew!=null">
				AND TPPOS.IS_NEW = #{isNew}
			</if>
			<if test="purchaseOrderCode!=null">
				AND TPPOS.PURCHASE_ORDER_CODE like '%'||#{purchaseOrderCode}||'%'
			</if>
			<if test="purchaserOrderCodes!=null">
				AND TPPOS.PURCHASE_ORDER_CODE in
				<foreach collection="purchaserOrderCodes" item="orderCode"
					open="(" separator="," close=")">
					#{orderCode}
				</foreach>
			</if>
			<if test="orderType!=null">
				AND TPPOS.ORDER_TYPE = #{orderType}
			</if>
			<if test="orderTypes!=null">
				AND TPPOS.ORDER_TYPE in
				<foreach collection="orderTypes" item="orderType"
					open="(" separator="," close=")">
					#{orderType}
				</foreach>
			</if>
			<if test="urgentFlag!=null">
				AND TPPOS.URGENT_FLAG = #{urgentFlag}
			</if>
			<!-- <if test="isDeal!=null">
				<if test="isDeal==0">
					AND PIS.WCL = #{isDeal}
				</if>
				<if test="isDeal==1">
					AND PIS.WCL &gt; 0
				</if>
				AND TPPOS.IS_DEAL = #{isDeal}
			</if> -->
			<if test="isDeal!=null">
				AND (
				<trim prefixOverrides="OR">
					<if test='isDeal.indexOf("Y") != -1'>
						OR TPPOS.IS_DEAL = 'Y'
					</if>
					<if test='isDeal.indexOf("N") != -1'>
						OR (TPPOS.IS_DEAL = 'N' AND PIS.CONTROL_FLAG = 0)
					</if>
					<if test='isDeal.indexOf("A") != -1'>
						OR (TPPOS.IS_DEAL = 'N' AND PIS.CONTROL_FLAG > 0)
					</if>
				</trim>
				)
			</if>
			
			<if test="sendDateStart != null"> AND TPPOS.SEND_DATE >= TO_DATE('${sendDateStart}
				00:00:00', 'YYYY-MM-DD hh24:mi:ss')
			</if>
			<if test="sendDateEnd != null">
				AND TPPOS.SEND_DATE <![CDATA[<=]]>
				TO_DATE('${sendDateEnd} 23:59:59', 'YYYY-MM-DD hh24:mi:ss')
			</if>
			<if test="sendGoodsType!=null">
				AND TPPOS.SEND_GOODS_TYPE = #{sendGoodsType}
			</if>
			<!-- modify by wld 2016-9-27 新增查询条件 是否下载 -->
			<if test='isExport!=null and isExport=="N"'>
				AND PIS.ZS - PIS.YDC  > 0
			</if>
			<if test='isExport!=null and isExport=="Y"'>
				AND PIS.ZS - PIS.YDC  <![CDATA[<=]]> 0
			</if>
			<include refid="com.yunhan.scc.backto.web.dao.mapper.system.SystemBacktoDao.isExists"></include>
		</where>
		<!-- 排序条件部分 -->
		<if test="sortOrderField == 'sendDate'">
			ORDER BY TPPOS.SEND_DATE ${sortOrderRule},
			TPPOS.URGENT_FLAG ASC,
			TPPOS.ORDER_TYPE DESC,
			TPPOS.PURCHASE_ORDER_CODE ASC
		</if>
		<if test="sortOrderField == 'urgentFlag'">
			ORDER BY TPPOS.URGENT_FLAG ${sortOrderRule},
			TPPOS.SEND_DATE DESC,
			TPPOS.ORDER_TYPE DESC,
			TPPOS.PURCHASE_ORDER_CODE ASC
		</if>
		<if test="sortOrderField == 'orderType'">
			ORDER BY TPPOS.ORDER_TYPE ${sortOrderRule},
			TPPOS.SEND_DATE DESC,
			TPPOS.URGENT_FLAG ASC,
			TPPOS.PURCHASE_ORDER_CODE ASC
		</if>
		<if test="sortOrderField == 'purchaseOrderCode'">
			ORDER BY TPPOS.PURCHASE_ORDER_CODE ${sortOrderRule},
			TPPOS.SEND_DATE DESC,
			TPPOS.URGENT_FLAG ASC,
			TPPOS.ORDER_TYPE DESC
		</if>
	</select>
	
	<select id="queryPendingOrderSummaryByPage_count" resultType="java.lang.Integer" 
		parameterType="ProPurOrderSummaryBacktoCondition">
		SELECT count(1) 
		FROM PRO_PUR_ORDER_SUMMARY TPPOS,
		(SELECT SUM(CASE
             WHEN UPPER(PI.Is_Deal) = 'N' AND UPPER(PI.IS_VALID) = 'Y' 
             THEN
              1
             ELSE
              0
           END) WCL,
       SUM(CASE
             WHEN nodeload.is_export = 'Y' THEN
              1
             ELSE
              0
           END) YDC,
	       COUNT(1) ZS,
	       PI.PURCHASE_ORDER_CODE,
	       PI.PURCHASER_ID,
		   PI.SUPPLIER_ID,
		   sum(CONTROL_FLAG) CONTROL_FLAG
		  FROM PRO_PUR_ORDER_ITEMS PI, NODE_USER_DATA_REL nodeload
		 where to_char(pi.id) = nodeload.data_id(+)
		   and nodeload.node_bsn_tp_cd(+) = 'HGFH' <!-- 声明下载节点标识为回告发货 -->
		   and nodeload.data_type(+) ='ORDER' <!-- 声明下载类型标识为订单 -->
		   and PI.STATUS not in ('50')
		   <if test="sendGoodsType!=null">
				AND PI.IS_DEAL = 'N'
                AND PI.IS_VALID = 'Y'
			</if>
		<!--    and nodeload.user_code(+) = '2200059PQ' --><!-- 声明下载人员（暂时不用） -->
		 GROUP BY PI.PURCHASE_ORDER_CODE, PI.PURCHASER_ID, PI.SUPPLIER_ID) PIS
		<where>
			PIS.PURCHASE_ORDER_CODE = TPPOS.PURCHASE_ORDER_CODE
			AND PIS.PURCHASER_ID = TPPOS.PURCHASER_ID
			AND PIS.SUPPLIER_ID = TPPOS.SUPPLIER_ID
		    AND TPPOS.ORDER_STATUS not in (0,5,40,45,47,50)
		    AND TPPOS.IS_SUPPLEMENT = 'N' <!-- modify by wld 2016-10-17 排除补单数据 -->
			<if test="purchaserId!=null">
				and TPPOS.purchaser_id = #{purchaserId}
			</if>
			<if test="warehouse!=null">
				<if test="warehouse== 'QITA'">
					AND (TPPOS.WAREHOUSE NOT IN (
					SELECT T.CODE
					FROM DC_LOCATION T
					WHERE T.NODE_LEVEL = 3
					START WITH T.CODE = #{purchaserId}
					AND T.STATUS = 0
					CONNECT BY PRIOR T.ID = T.PARENT_ID
					) or TPPOS.WAREHOUSE is null)
				</if>
				<if test="warehouse!='QITA'">
					and TPPOS.WAREHOUSE = #{warehouse}
				</if>
			</if>
			<if  test="warehouses!=null">
				AND TPPOS.WAREHOUSE in
				<foreach collection="warehouses" item="warehouseItem"  open="(" separator="," close=")">  
			           #{warehouseItem}  
			     </foreach>	
			</if>
			<if test="isNew!=null">
				and TPPOS.IS_NEW = #{isNew}
			</if>
			<if test="purchaseOrderCode!=null">
				and TPPOS.PURCHASE_ORDER_CODE like '%'||#{purchaseOrderCode}||'%'
			</if>
			<if test="purchaserOrderCodes!=null">
				and TPPOS.PURCHASE_ORDER_CODE in
				<foreach collection="purchaserOrderCodes" item="orderCode"
					open="(" separator="," close=")">
					#{orderCode}
				</foreach>
			</if>
			<if test="orderType!=null">
				and TPPOS.ORDER_TYPE = #{orderType}
			</if>
			<if test="orderTypes!=null">
				AND TPPOS.ORDER_TYPE in
				<foreach collection="orderTypes" item="orderType"
					open="(" separator="," close=")">
					#{orderType}
				</foreach>
			</if>
			<if test="urgentFlag!=null">
				and TPPOS.URGENT_FLAG = #{urgentFlag}
			</if>
			<!-- <if test="isDeal!=null">
				<if test="isDeal==0">
					AND PIS.WCL = #{isDeal}
				</if>
				<if test="isDeal==1">
					AND PIS.WCL &gt; 0
				</if>
				and TPPOS.IS_DEAL = #{isDeal}
			</if> -->
			<if test="isDeal!=null">
				AND (
				<trim prefixOverrides="OR">
					<if test='isDeal.indexOf("Y") != -1'>
						OR TPPOS.IS_DEAL = 'Y'
					</if>
					<if test='isDeal.indexOf("N") != -1'>
						OR (TPPOS.IS_DEAL = 'N' AND PIS.CONTROL_FLAG = 0)
					</if>
					<if test='isDeal.indexOf("A") != -1'>
						OR (TPPOS.IS_DEAL = 'N' AND PIS.CONTROL_FLAG > 0)
					</if>
				</trim>
				)
			</if>
			<if test="sendDateStart != null"> and TPPOS.SEND_DATE >= TO_DATE('${sendDateStart}
				00:00:00', 'YYYY-MM-DD hh24:mi:ss')
			</if>
			<if test="sendDateEnd != null">
				and TPPOS.SEND_DATE <![CDATA[<=]]>
				TO_DATE('${sendDateEnd} 23:59:59', 'YYYY-MM-DD hh24:mi:ss')
			</if>
			<if test="sendGoodsType!=null">
				AND TPPOS.SEND_GOODS_TYPE = #{sendGoodsType}
			</if>
			<!-- modify by wld 2016-9-27 新增查询条件 是否下载 -->
			<if test='isExport!=null and isExport=="N"'>
				AND PIS.ZS - PIS.YDC  > 0
			</if>
			<if test='isExport!=null and isExport=="Y"'>
				AND PIS.ZS - PIS.YDC  <![CDATA[<=]]> 0
			</if>
			<include refid="com.yunhan.scc.backto.web.dao.mapper.system.SystemBacktoDao.isExists"></include>
		</where>
	</select>
	
	<select id="getUntreatedMonthAgo" parameterType="ProPurOrderSummaryBacktoCondition" resultType="java.lang.Integer">
		SELECT nvl(count(1), 0) FROM PRO_PUR_ORDER_SUMMARY TPPOS LEFT JOIN PRO_PUR_ORDER_ITEMS PS
		   ON PS.PURCHASE_ORDER_CODE = TPPOS.PURCHASE_ORDER_CODE
		   AND PS.PURCHASER_ID = TPPOS.PURCHASER_ID
		   AND PS.SUPPLIER_ID = TPPOS.SUPPLIER_ID
		   AND TPPOS.ORDER_STATUS IN (10,13,15,20,30,35)
		  
		<where>
			 UPPER(PS.IS_VALID) = 'Y'
   			 AND PS.IS_DEAL='N'
   			  AND TPPOS.IS_SUPPLEMENT = 'N' <!-- modify by wld 2016-10-17 排除补单数据 -->
   			 <if test="purchaserId!=null">
   			 	AND TPPOS.PURCHASER_ID = #{purchaserId}
   			 </if>
   			 <if test="sendDateEnd != null">
				AND TPPOS.SEND_DATE <![CDATA[<=]]>
				TO_DATE('${sendDateEnd} 23:59:59', 'YYYY-MM-DD hh24:mi:ss')
			</if>
		</where> 
        <include refid="com.yunhan.scc.backto.web.dao.mapper.system.SystemBacktoDao.isExists"></include>
	</select>
	
	<select id="findProPurOrderSummary" resultMap="ProPurOrderSummaryBacktoResult" parameterType="ProPurOrderSummaryBacktoCondition">
		SELECT 
			P.ADD_DATE ,
			P.ADD_TIME ,
			P.ADD_USER ,
			P.ADD_USER_CODE ,
			P.ADD_USER_PHONENO ,
			P.AVAILABLE_QTY ,
			P.AVAILABLE_RATE ,
			P.DESTINATION ,
			P.EXPIRY_DATE ,
			P.ID ,
			P.IS_NEW ,
			P.IS_ORDER_COMPLETE ,
			P.IS_SUPPLEMENT ,
			P.ORDER_REMARK ,
			P.ORDER_STATUS ,
			P.ORDER_TYPE ,
			P.PURCHASER_ID ,
			P.PURCHASE_ORDER_CODE ,
			P.RECEIVE_ADDRESS ,
			P.RECEIVE_CONTACT_USER ,
			P.RECEIVE_DEPT,
			P.RECEIVE_PHONENO ,
			P.RECEIVE_QTY ,
			P.RECEIVE_RATE ,
			P.REQ_ARRIVE_DATE ,
			P.SENDOUT_GOODS_CODE ,
			P.SENDOUT_QTY ,
			P.SENDOUT_RATE ,
			P.SEND_DATE ,
			P.SEND_GOODS_TYPE ,
			P.SEND_USER ,
			P.SOURCE_TYPE ,
			P.SUPPLIER_ID ,
			P.TOTAL_BOOK_QTY ,
			P.TOTAL_PRICE ,
			P.TOTAL_REALITY_PRICE ,
			P.TOTAL_VARIETY_QTY ,
			P.UPDATE_TIME ,
			P.UPDATE_USER_CODE ,
			P.URGENT_FLAG ,
			P.WAREHOUSE ,
			P.YUNHAN_ORDER_CODE,
			D.NAME purchaserName
		 FROM PRO_PUR_ORDER_SUMMARY P 
		 LEFT JOIN  T_DEPARTMENT D  
		 ON  P.PURCHASER_ID = D.SAPVENDORID
		<where>	
			<trim prefixOverrides="AND">
				<if  test="purchaseOrderCode!=null">
					AND p.PURCHASE_ORDER_CODE = #{purchaseOrderCode}
				</if> 
				<if test="purchaserId!=null">
					AND p.PURCHASER_ID = #{purchaserId}
				</if> 
				<if test="id != null">
					AND p.id = #{id}
				</if>
			</trim>
		</where>
	</select >
	
	
	<select  id="findProPurOrderItemsByPage" resultMap="ProPurOrderItemsBacktoResult" parameterType="ProPurOrderItemsBacktoCondition">
	select	
		ppo.ID,
		ppo.YUNHAN_ORDER_CODE,
		ppo.PURCHASE_ORDER_CODE,
		ppo.ROW_UNIQUE_NO,
		ppo.ORDER_TERM_NO,
		ppo.YUNHAN_ID,
		ppo.PURCHASER_COMMODITIES_ID,
		ppo.SUPPLIER_ID,
		ppo.PURCHASER_ID,
		ppo.ISBN,
		ppo.BOOK_TITLE,
		ppo.PRICE,
		ppo.MARKETING_CATEGORIES,
		ppo.DISCOUNTRATE,
		ppo.ORDER_QTY,
		ppo.SALE_PRICE,
		ppo.REALITY_SALE_PRICE,
		ppo.SEND_SCHEME,
		ppo.STATUS,
		ppo.IS_IMPORTENT,
		ppo.IS_VALID,
		<!-- ppo.URGENT_FLAG, -->
		ppo.IS_VIEW,
		ppo.ADD_USER_CODE,
		ppo.UPDATE_USER_CODE,
		ppo.UPDATE_TIME,
		ppo.SENDOUT_GOODS_CODE,
		nvl(ppo.SENDOUT_QTY,0) as SENDOUT_QTY,
		ppo.SOURCE_TYPE,
		ppo.CLOSE_REASON,
		ppo.RECEIVE_QTY,
		ppo.RECEIVE_DATE,
		ppo.SUPPLIER_COMMODITIES_ID,
		ppo.SUBSCRIPTION_CODE,
		ppo.NOT_SENDOUT_QTY,
		ppo.CLOSE_STATUS,
		ppo.SERIES_TITLE,
		ppo.AFFILIATE_SERIES,
		ppo.AUTHOR_EDITOR,
		ppo.PUBLISHER,
		ppo.VERSION_NO,
		ppo.IMPRESSION,
		ppo.PAPERBACK,
		ppo.SALES_PRICES,
		ppo.CLOSE_COUNTER,
		ppo.CONTROL_FLAG,
		ppo.IS_SUIT_BOOK,
		ppo.IS_DEAL,
		prt.OTHER_AVAILABLE_REASON HISTORY_OTHER_AVAILABLE_REASON ,
		prt.PRE_SEND_DATE as HISTORY_PRE_SEND_DATE,
		prt.AVAILABLE_PRICE as HISTORY_AVAILABLE_PRICE ,
		prt.AVAILABLE_DISCOUNTRATE as HISTORY_AVAILABLE_DISCOUNTRATE,
		prt.response_remark HISTORY_RESPONSE_REMARK,
		przc.AVAILABLE_PRICE,
        przc.THIS_SEND_QTY,
        przc.PRE_SEND_DATE,
        przc.RESPONSE_REMARK,
        przc.Available_Discountrate,
		TPPOS.Order_Type as orderType,
		TPPOS.Send_Goods_Type as sendGoodsType,
		TPPOS.id as summaryId,
		TPPOS.ADD_TIME  as addTime,
		TPPOS.SEND_DATE,
		TPPOS.ORDER_REMARK as REMARK,
		TPPOS.URGENT_FLAG,
		TPPOS.is_new,
		TPPOS.ADD_DATE,
		TPPOS.warehouse,
		case when przc.id is null then
           (select pr.other_available_reason
              from pro_response_items pr
             where ppo.isbn = pr.isbn
               and ppo.book_title = pr.book_title
               and ppo.price = pr.price
               and ppo.purchaser_id = pr.purchaser_id
               and ppo.supplier_id = pr.supplier_id
<!--                and pr.OTHER_AVAILABLE_REASON in ('2', '3', '4', '5', '6') -->
<!--                and pr.RESPONSE_STATUS = 5 -->
               and pr.id = (select max(re.id)
                              from pro_response_items re
                             where re.isbn = pr.isbn 
                               and re.book_title = pr.book_title
                               and re.price = pr.price
                               and re.purchaser_id = pr.purchaser_id
                               and re.supplier_id = pr.supplier_id
                               and re.response_status = 5
                               and re.IS_VALID = 'Y'
                               and re.OTHER_AVAILABLE_REASON in ('2', '3', '4', '5', '6')
                               )) else przc.OTHER_AVAILABLE_REASON end as OTHER_AVAILABLE_REASON,
		decode(nodeload.is_export,null,'N',nodeload.is_export) is_export
 	 from pro_pur_order_items ppo
 	 left join pro_response_items prt
   	 	on ppo.id = prt.pro_pur_order_items_id and prt.response_status = 5 AND prt.IS_VALID = 'Y'
   	 left join pro_response_items przc 
   	 	on przc.pro_pur_order_items_id = ppo.id and przc.response_status = 0 AND przc.IS_VALID='Y'
   	 left join  PRO_PUR_ORDER_SUMMARY TPPOS 
   	 	on TPPOS.Purchase_Order_Code=ppo.purchase_order_code
   	 left join NODE_USER_DATA_REL nodeload
                   on to_char(PPO.id) = nodeload.data_id
                  and nodeload.node_bsn_tp_cd = 'HGFH'
                  and nodeload.data_type ='ORDER'
   	 <where>
   	 NVL(prt.ID, 0) =
	         NVL((SELECT MAX(PS.ID) ID
	               FROM PRO_RESPONSE_ITEMS PS
	              WHERE PS.PRO_PUR_ORDER_ITEMS_ID = ppo.ID
		               <!-- <if test="purchaserId!=null">
		               		AND PS.PURCHASER_ID = #{purchaserId}
		               </if> -->
		                and PS.response_status = 5
		                AND PS.IS_VALID = 'Y'
	                ),
	             0)
   	 and TPPOS.ORDER_STATUS NOT IN (0, 5, 40, 45, 47, 50)
   	 and ppo.status not in (0,5,50)
     and ppo.is_valid='Y'
     and ppo.IS_DEAL = 'N'
     and TPPOS.Purchaser_Id=ppo.purchaser_id
     and TPPOS.Supplier_Id=ppo.supplier_id
     and tppos.IS_SUPPLEMENT ='N'
     <if test="purchaserId!=null">
				AND ppo.PURCHASER_ID = #{purchaserId}
	</if>
	<if test="isNew!=null">
				and TPPOS.IS_NEW = #{isNew}
	</if>
	
	<if test="warehouse!=null">
		<if test="warehouse== 'QITA'">
			AND (TPPOS.WAREHOUSE NOT IN (
			SELECT T.CODE
			FROM DC_LOCATION T
			WHERE T.NODE_LEVEL = 3
			START WITH T.CODE = #{purchaserId}
			AND T.STATUS = 0
			CONNECT BY PRIOR T.ID = T.PARENT_ID
			) or TPPOS.WAREHOUSE is null)
		</if>
		<if test="warehouse!='QITA'">
			AND TPPOS.WAREHOUSE = #{warehouse}
		</if>
	</if>
	<if  test="warehouses!=null">
		AND TPPOS.WAREHOUSE in
		<foreach collection="warehouses" item="warehouseItem"  open="(" separator="," close=")">  
	           #{warehouseItem}  
	     </foreach>	
	</if>
	<if test="purchaseOrderCode!=null">
				and ppo.PURCHASE_ORDER_CODE like '%${purchaseOrderCode}%'
	</if>
	<if test="purchaserOrderCodes!=null">
				and ppo.PURCHASE_ORDER_CODE in
				<foreach collection="purchaserOrderCodes" item="orderCode"
					open="(" separator="," close=")">
					#{orderCode}
				</foreach>
	</if>
	<if test="orderType!=null">
				and TPPOS.ORDER_TYPE = #{orderType}
	</if>
	<if test="orderTypes!=null">
			and TPPOS.ORDER_TYPE in
			<foreach collection="orderTypes" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	<if test='isExport=="Y"'>
			and nodeload.IS_EXPORT = #{isExport}
	 </if>
	 <if test='isExport=="N"'>
			and (nodeload.IS_EXPORT = #{isExport} or nodeload.IS_EXPORT is null)
	 </if>
	 <if test="isbn!=null">
			and ppo.ISBN like '%${isbn}%'
	 </if>
	 <if test="isbns!=null">
			and ppo.ISBN in
			<foreach collection="isbns" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	 <if test="bookTitle!=null">
			and ppo.BOOK_TITLE like '%${bookTitle}%'
	 </if>
	 <if test="bookTitles!=null">
			and ppo.BOOK_TITLE in
			<foreach collection="bookTitles" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	 <if test="sendDateStart != null"> and TPPOS.SEND_DATE <![CDATA[>=]]> TO_DATE('${sendDateStart}
	 	00:00:00', 'YYYY-MM-DD hh24:mi:ss')
	 </if>
	 <if test="sendDateEnd != null">
	 	and TPPOS.SEND_DATE <![CDATA[<=]]>
	 	TO_DATE('${sendDateEnd} 23:59:59', 'YYYY-MM-DD hh24:mi:ss')
	 </if>
	 <if test="sendGoodsType!=null">
		AND TPPOS.SEND_GOODS_TYPE = #{sendGoodsType}
	</if>
	<if test="otherAvailableReason!=null and controlFlag!=0">
		AND prt.OTHER_AVAILABLE_REASON in (${otherAvailableReason})
	</if>
	<if test="otherAvailableReason!=null and controlFlag==0">
		AND (prt.OTHER_AVAILABLE_REASON in (${otherAvailableReason})
			or prt.RESPONSE_STATUS is null
		)
	</if>
	<if test="controlFlag==5">
				and prt.RESPONSE_STATUS = 5
	</if>
	<if test="controlFlag==0 and otherAvailableReason==null">
				and prt.RESPONSE_STATUS is null
	</if>
	<if test="urgentFlag!=null">
		AND TPPOS.URGENT_FLAG = #{urgentFlag}
	</if>
   	 </where>
   	         <include refid="com.yunhan.scc.backto.web.dao.mapper.system.SystemBacktoDao.isExists"></include>
   	            	 <!-- 排序条件部分 -->
   	     <if test="sortOrderField == 'defaultSort'">
			ORDER BY TPPOS.SEND_DATE DESC,
							 TPPOS.URGENT_FLAG ASC,
							 TPPOS.ORDER_TYPE DESC,
							 TPPOS.PURCHASE_ORDER_CODE ASC
		</if>
		<if test="sortOrderField == 'sendDate'">
			ORDER BY TPPOS.SEND_DATE ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'bookTitle'">
			ORDER BY ppo.BOOK_TITLE ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'price'">
			 ORDER BY nvl(nvl(przc.available_price,prt.available_price),PPO.PRICE) ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'discountrate'">
			ORDER BY nvl(nvl(przc.available_discountrate,prt.available_discountrate),PPO.DISCOUNTRATE) ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'purchaseOrderCode'">
			ORDER BY TPPOS.PURCHASE_ORDER_CODE ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'orderQty'">
			ORDER BY ppo.ORDER_QTY ${sortOrderRule}
		</if>
	</select>
	
	<select  id="findProPurOrderItemsByPage_count" parameterType="ProPurOrderItemsBacktoCondition" resultType="java.lang.Integer">
	select	
		count(1)
 	 from pro_pur_order_items ppo
 	 left join pro_response_items prt
   	 	on ppo.id = prt.pro_pur_order_items_id and prt.response_status = 5 AND prt.IS_VALID = 'Y'
   	 left join pro_response_items przc 
   	 	on przc.pro_pur_order_items_id = ppo.id and przc.response_status = 0 AND przc.IS_VALID='Y'
   	 left join  PRO_PUR_ORDER_SUMMARY TPPOS 
   	 	on TPPOS.Purchase_Order_Code=ppo.purchase_order_code
   	 left join NODE_USER_DATA_REL nodeload
                   on to_char(PPO.id) = nodeload.data_id
                  and nodeload.node_bsn_tp_cd = 'HGFH'
                  and nodeload.data_type ='ORDER'
   	 <where>
   	 NVL(prt.ID, 0) =
	         NVL((SELECT MAX(PS.ID) ID
	               FROM PRO_RESPONSE_ITEMS PS
	              WHERE PS.PRO_PUR_ORDER_ITEMS_ID = ppo.ID
		               <!-- <if test="purchaserId!=null">
		               		AND PS.PURCHASER_ID = #{purchaserId}
		               </if> -->
		                and PS.response_status = 5
		                AND PS.IS_VALID = 'Y'
	                ),
	             0)
   	 and TPPOS.ORDER_STATUS NOT IN (0, 5, 40, 45, 47, 50)
   	 and ppo.status not in (0,5,50)
     and ppo.is_valid='Y'
     and ppo.IS_DEAL = 'N'
     and TPPOS.Purchaser_Id=ppo.purchaser_id
     and TPPOS.Supplier_Id=ppo.supplier_id
     and tppos.IS_SUPPLEMENT ='N'
     <if test="purchaserId!=null">
				AND ppo.PURCHASER_ID = #{purchaserId}
	</if>
	<if test="isNew!=null">
				and TPPOS.IS_NEW = #{isNew}
	</if>
	
	<if test="warehouse!=null">
		<if test="warehouse== 'QITA'">
			AND (TPPOS.WAREHOUSE NOT IN (
			SELECT T.CODE
			FROM DC_LOCATION T
			WHERE T.NODE_LEVEL = 3
			START WITH T.CODE = #{purchaserId}
			AND T.STATUS = 0
			CONNECT BY PRIOR T.ID = T.PARENT_ID
			) or TPPOS.WAREHOUSE is null)
		</if>
		<if test="warehouse!='QITA'">
			AND TPPOS.WAREHOUSE = #{warehouse}
		</if>
	</if>
	<if  test="warehouses!=null">
		AND TPPOS.WAREHOUSE in
		<foreach collection="warehouses" item="warehouseItem"  open="(" separator="," close=")">  
	           #{warehouseItem}  
	     </foreach>	
	</if>
	<if test="purchaseOrderCode!=null">
				and ppo.PURCHASE_ORDER_CODE like '%${purchaseOrderCode}%'
	</if>
	<if test="purchaserOrderCodes!=null">
				and ppo.PURCHASE_ORDER_CODE in
				<foreach collection="purchaserOrderCodes" item="orderCode"
					open="(" separator="," close=")">
					#{orderCode}
				</foreach>
	</if>
	<if test="orderType!=null">
				and TPPOS.ORDER_TYPE = #{orderType}
	</if>
	<if test="orderTypes!=null">
			and TPPOS.ORDER_TYPE in
			<foreach collection="orderTypes" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	<if test='isExport=="Y"'>
			and nodeload.IS_EXPORT = #{isExport}
	 </if>
	 <if test='isExport=="N"'>
			and (nodeload.IS_EXPORT = #{isExport} or nodeload.IS_EXPORT is null)
	 </if>
	 <if test="isbn!=null">
			and ppo.ISBN like '%${isbn}%'
	 </if>
	 <if test="isbns!=null">
			and ppo.ISBN in
			<foreach collection="isbns" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	 <if test="bookTitle!=null">
			and ppo.BOOK_TITLE like '%${bookTitle}%'
	 </if>
	 <if test="bookTitles!=null">
			and ppo.BOOK_TITLE in
			<foreach collection="bookTitles" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	 <if test="sendDateStart != null"> and TPPOS.SEND_DATE <![CDATA[>=]]> TO_DATE('${sendDateStart}
	 	00:00:00', 'YYYY-MM-DD hh24:mi:ss')
	 </if>
	 <if test="sendDateEnd != null">
	 	and TPPOS.SEND_DATE <![CDATA[<=]]>
	 	TO_DATE('${sendDateEnd} 23:59:59', 'YYYY-MM-DD hh24:mi:ss')
	 </if>
	 <if test="sendGoodsType!=null">
		AND TPPOS.SEND_GOODS_TYPE = #{sendGoodsType}
	</if>
	<if test="otherAvailableReason!=null and controlFlag!=0">
		AND prt.OTHER_AVAILABLE_REASON in (${otherAvailableReason})
	</if>
	<if test="otherAvailableReason!=null and controlFlag==0">
		AND (prt.OTHER_AVAILABLE_REASON in (${otherAvailableReason})
			or prt.RESPONSE_STATUS is null
		)
	</if>
	<if test="controlFlag==5">
				and prt.RESPONSE_STATUS = 5
	</if>
	<if test="controlFlag==0 and otherAvailableReason==null">
				and prt.RESPONSE_STATUS is null
	</if>
	<if test="urgentFlag!=null">
		AND TPPOS.URGENT_FLAG = #{urgentFlag}
	</if>
   	 </where>
   	         <include refid="com.yunhan.scc.backto.web.dao.mapper.system.SystemBacktoDao.isExists"></include>
   	 
	</select>
	
	<!-- 品种方式-已处理品种 -->
	<select  id="findProPurOrderItemsTwoByPage" resultMap="ProPurOrderItemsBacktoResult" parameterType="ProPurOrderItemsBacktoCondition">
	select	
	   ppo.id,
       ppo.purchase_order_code,
      <!--  ppo.remark, -->
       ppo.book_title,
       ppo.price,
       ppo.discountrate,
       ppo.order_qty,
       ppo.sendout_qty,
       ppo.sale_price,
       ppo.receive_qty,
<!--        ppo.is_export, -->
       <!-- ppo.urgent_flag, -->
       ppo.isbn,
       ppo.series_title,
       ppo.is_importent,
       ppo.is_suit_book,
       ppo.is_valid,
       tppos.id as summaryId,
       tppos.order_remark as remark,
       tppos.send_goods_type as sendGoodsType,
       tppos.is_new,
       tppos.order_type as orderType,
       tppos.total_price,
       tppos.add_date,
       tppos.send_date,
       tppos.urgent_flag,
       prt.price as rePrice,
       prt.AVAILABLE_PRICE,
       prt.discountrate as reDiscountrate,
       prt.Available_Discountrate,
       prt.response_status as status,
       decode(nodeload.is_export,null,'N',nodeload.is_export) is_export
 	 from pro_pur_order_items ppo
 	 left join  PRO_PUR_ORDER_SUMMARY TPPOS 
 	 on TPPOS.Purchase_Order_Code=ppo.purchase_order_code and tppos.purchaser_id=ppo.purchaser_id and tppos.supplier_id=ppo.supplier_id
 	 left join pro_response_items prt
   	 on ppo.id = prt.pro_pur_order_items_id and prt.response_status = 5 AND prt.IS_VALID = 'Y'
   	 AND Prt.PURCHASE_ORDER_CODE = ppo.PURCHASE_ORDER_CODE AND Prt.PURCHASER_ID = ppo.PURCHASER_ID
   	 left join NODE_USER_DATA_REL nodeload
                   on to_char(PPO.id) = nodeload.data_id
                  and nodeload.node_bsn_tp_cd = 'HGFH'
                  and nodeload.data_type ='ORDER'
   	 <where>
   	 	 NVL(prt.ID, 0) =
	         NVL((SELECT MAX(PS.ID) ID
	               FROM PRO_RESPONSE_ITEMS PS
	              WHERE PS.PRO_PUR_ORDER_ITEMS_ID = ppo.ID
               	   	AND PS.PURCHASE_ORDER_CODE = ppo.PURCHASE_ORDER_CODE
               		AND PS.PURCHASER_ID = ppo.PURCHASER_ID
		               and PS.response_status = 5 AND PS.IS_VALID = 'Y'
	                ),
	             0)
   		 and ppo.status not in (0,5,50)
   		 and ppo.is_deal = 'Y' 
   		 and tppos.IS_SUPPLEMENT ='N'
   		 <!-- and
   		 (
   		 	ppo.is_valid in('N','X') or
   		 	(ppo.ORDER_QTY = ppo.SENDOUT_QTY)
   		 ) -->
     <if test="purchaserId!=null">
				AND ppo.PURCHASER_ID = #{purchaserId}
	</if>
	<if test="purchaseOrderCode!=null">
				and ppo.PURCHASE_ORDER_CODE like '%${purchaseOrderCode}%'
	</if>
	<if test="purchaserOrderCodes!=null">
				and ppo.PURCHASE_ORDER_CODE in
				<foreach collection="purchaserOrderCodes" item="item"
					open="(" separator="," close=")">
					#{item}
				</foreach>
	</if>
	<if test="orderType!=null">
				and TPPOS.ORDER_TYPE = #{orderType}
	</if>
	<if test="orderTypes!=null">
			and TPPOS.ORDER_TYPE in
			<foreach collection="orderTypes" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	<if test="isNew!=null">
				and TPPOS.IS_NEW = #{isNew}
	</if>
	<if test="warehouse!=null">
		<if test="warehouse== 'QITA'">
			AND (TPPOS.WAREHOUSE NOT IN (
			         SELECT T.CODE
			         FROM DC_LOCATION T
			         WHERE T.NODE_LEVEL = 3
			         START WITH T.CODE = #{purchaserId}
			         AND T.STATUS = 0
			         CONNECT BY PRIOR T.ID = T.PARENT_ID
			  ) or TPPOS.WAREHOUSE is null)
		</if>
		<if test="warehouse!='QITA'">
			AND TPPOS.WAREHOUSE = #{warehouse}
		</if>
	 </if>
	 <if  test="warehouses!=null">
		AND TPPOS.WAREHOUSE in
		<foreach collection="warehouses" item="warehouseItem"  open="(" separator="," close=")">  
	           #{warehouseItem}  
	     </foreach>	
	 </if>
	 <if test='isExport=="Y"'>
			and nodeload.IS_EXPORT = #{isExport}
	 </if>
	 <if test='isExport=="N"'>
			and (nodeload.IS_EXPORT = #{isExport} or nodeload.IS_EXPORT is null)
	 </if>
	 <if test="isbn!=null">
			and ppo.ISBN like '%${isbn}%'
	 </if>
	 <if test="isbns!=null">
			and ppo.ISBN in
			<foreach collection="isbns" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	 <if test="bookTitle!=null">
			and ppo.BOOK_TITLE like '%${bookTitle}%'
	 </if>
	 <if test="bookTitles!=null">
			and ppo.BOOK_TITLE in
			<foreach collection="bookTitles" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	 <if test="sendDateStart != null"> and TPPOS.SEND_DATE <![CDATA[>=]]> TO_DATE('${sendDateStart}
	 	00:00:00', 'YYYY-MM-DD hh24:mi:ss')
	 </if>
	 <if test="sendDateEnd != null">
	 	and TPPOS.SEND_DATE <![CDATA[<=]]>
	 	TO_DATE('${sendDateEnd} 23:59:59', 'YYYY-MM-DD hh24:mi:ss')
	 </if>
	 <if test="isValids != null">
	 	and ppo.is_valid in 
		<foreach collection="isValids" item="item"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	 </if>
	 <if test="isValid != null">
	 	and ppo.is_valid=#{isValid}
	 	and ppo.is_view='N'
	 </if>
	 <if test="urgentFlag!=null">
		AND TPPOS.URGENT_FLAG = #{urgentFlag}
	</if>
   	 </where>
   	         <include refid="com.yunhan.scc.backto.web.dao.mapper.system.SystemBacktoDao.isExists"></include>
   	 <!-- 排序条件部分 -->
		<!-- <if test="sortOrderField == 'sendDate'">
			ORDER BY TPPOS.SEND_DATE ${sortOrderRule},
			TPPOS.URGENT_FLAG ASC,
			TPPOS.ORDER_TYPE DESC,
			TPPOS.PURCHASE_ORDER_CODE ASC
		</if>
		<if test="sortOrderField == 'urgentFlag'">
			ORDER BY TPPOS.URGENT_FLAG ${sortOrderRule},
			TPPOS.SEND_DATE DESC,
			TPPOS.ORDER_TYPE DESC,
			TPPOS.PURCHASE_ORDER_CODE ASC
		</if>
		<if test="sortOrderField == 'orderType'">
			ORDER BY TPPOS.ORDER_TYPE ${sortOrderRule},
			TPPOS.SEND_DATE DESC,
			TPPOS.URGENT_FLAG ASC,
			TPPOS.PURCHASE_ORDER_CODE ASC
		</if>
		<if test="sortOrderField == 'purchaseOrderCode'">
			ORDER BY TPPOS.PURCHASE_ORDER_CODE ${sortOrderRule},
			TPPOS.SEND_DATE DESC,
			TPPOS.URGENT_FLAG ASC,
			TPPOS.ORDER_TYPE DESC
		</if> -->
		<if test="sortOrderField == 'sendDate'">
			ORDER BY TPPOS.SEND_DATE ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'bookTitle'">
			ORDER BY ppo.BOOK_TITLE ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'price'">
			 ORDER BY nvl(prt.available_price,PPO.PRICE) ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'discountrate'">
			ORDER BY nvl(prt.available_discountrate,PPO.DISCOUNTRATE) ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'purchaseOrderCode'">
			ORDER BY TPPOS.PURCHASE_ORDER_CODE ${sortOrderRule}
		</if>
		<if test="sortOrderField == 'orderQty'">
			ORDER BY ppo.ORDER_QTY ${sortOrderRule}
		</if>
	</select>
	
	<!-- 品种方式-已处理品种 -->
	<select  id="findProPurOrderItemsTwoByPage_count" resultType="java.lang.Integer" parameterType="ProPurOrderItemsBacktoCondition">
	select	
		count(1)
 	 from pro_pur_order_items ppo
 	 inner join  PRO_PUR_ORDER_SUMMARY TPPOS
 	 on TPPOS.Purchase_Order_Code=ppo.purchase_order_code and tppos.purchaser_id=ppo.purchaser_id and tppos.supplier_id=ppo.supplier_id
 	 left join pro_response_items prt
   	 on ppo.id = prt.pro_pur_order_items_id and prt.response_status = 5 AND prt.IS_VALID = 'Y'
   	 <if test="isExport!=null">
	    left join NODE_USER_DATA_REL nodeload
	                 on to_char(PPO.id) = nodeload.data_id
	                and nodeload.node_bsn_tp_cd = 'HGFH'
	                and nodeload.data_type ='ORDER'
	  </if>
   	 <where>
   	 	 NVL(prt.ID, 0) =
	         NVL((SELECT MAX(PS.ID) ID
	               FROM PRO_RESPONSE_ITEMS PS
	              WHERE PS.PRO_PUR_ORDER_ITEMS_ID = ppo.ID
	                <if test="purchaseOrderCode!=null">
		               	   AND PS.PURCHASE_ORDER_CODE like '%${purchaseOrderCode}%'
		               </if>
		               <if test="purchaserId!=null">
		               		AND PS.PURCHASER_ID = #{purchaserId}
		               </if>
		               and PS.response_status = 5 AND PS.IS_VALID = 'Y'
	                ),
	             0)
   		 and ppo.status not in (0,5,50)
   		 and ppo.is_deal = 'Y'
   		 and tppos.IS_SUPPLEMENT ='N'
   		 <!-- and
   		 (
   		 	ppo.is_valid in('N','X') or
   		 	(ppo.ORDER_QTY = ppo.SENDOUT_QTY)
   		 ) -->
     <if test="purchaserId!=null">
				AND ppo.PURCHASER_ID = #{purchaserId}
	</if>
	<if test="purchaseOrderCode!=null">
				and ppo.PURCHASE_ORDER_CODE like '%${purchaseOrderCode}%'
	</if>
	<if test="purchaserOrderCodes!=null">
				and ppo.PURCHASE_ORDER_CODE in
				<foreach collection="purchaserOrderCodes" item="item"
					open="(" separator="," close=")">
					#{item}
				</foreach>
	</if>
	<if test="orderType!=null">
				and TPPOS.ORDER_TYPE = #{orderType}
	</if>
	<if test="orderTypes!=null">
			and TPPOS.ORDER_TYPE in
			<foreach collection="orderTypes" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	<if test="isNew!=null">
				and TPPOS.IS_NEW = #{isNew}
	</if>
	<if test="warehouse!=null">
		<if test="warehouse== 'QITA'">
			AND TPPOS.WAREHOUSE NOT IN (
			         SELECT T.CODE
			         FROM DC_LOCATION T
			         WHERE T.NODE_LEVEL = 3
			         START WITH T.CODE = #{purchaserId}
			         AND T.STATUS = 0
			         CONNECT BY PRIOR T.ID = T.PARENT_ID
			  )
		</if>
		<if test="warehouse!='QITA'">
			AND TPPOS.WAREHOUSE = #{warehouse}
		</if>
	 </if>
	 <if  test="warehouses!=null">
		AND TPPOS.WAREHOUSE in
		<foreach collection="warehouses" item="warehouseItem"  open="(" separator="," close=")">  
	           #{warehouseItem}  
	     </foreach>	
	 </if>
	 <if test='isExport=="Y"'>
			and nodeload.IS_EXPORT = #{isExport}
	 </if>
	 <if test='isExport=="N"'>
			and (nodeload.IS_EXPORT = #{isExport} or nodeload.IS_EXPORT is null)
	 </if>
	 <if test="isbn!=null">
			and ppo.ISBN like '%${isbn}%'
	 </if>
	 <if test="isbns!=null">
			and ppo.ISBN in
			<foreach collection="isbns" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	 <if test="bookTitle!=null">
			and ppo.BOOK_TITLE like '%${bookTitle}%'
	 </if>
	 <if test="bookTitles!=null">
			and ppo.BOOK_TITLE in
			<foreach collection="bookTitles" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
	 </if>
	 <if test="sendDateStart != null"> and TPPOS.SEND_DATE <![CDATA[>=]]> TO_DATE('${sendDateStart}
	 	00:00:00', 'YYYY-MM-DD hh24:mi:ss')
	 </if>
	 <if test="sendDateEnd != null">
	 	and TPPOS.SEND_DATE <![CDATA[<=]]>
	 	TO_DATE('${sendDateEnd} 23:59:59', 'YYYY-MM-DD hh24:mi:ss')
	 </if>
	 <if test="isValids != null">
	 	and ppo.is_valid in 
		<foreach collection="isValids" item="item"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	 </if>
	 <if test="isValid != null">
	 	and ppo.is_valid=#{isValid}
	 	and ppo.is_view='N'
	 </if>
	 <if test="urgentFlag!=null">
		AND TPPOS.URGENT_FLAG = #{urgentFlag}
	</if>
   	 </where>
   	         <include refid="com.yunhan.scc.backto.web.dao.mapper.system.SystemBacktoDao.isExists"></include>
	</select>

	
	<update id="updateOrderSummaryIsView" parameterType="java.util.List">
		UPDATE PRO_PUR_ORDER_SUMMARY PY SET PY.IS_VIEW='Y' WHERE PY.ID IN 
		<foreach collection="ids" item="id" 
			open="(" separator="," close=")">
			#{id}
		</foreach>
		AND PY.IS_VIEW='N'
	</update>
	
	<select id="getOrderSummaryIds" parameterType="java.util.List" resultType="java.lang.Integer">
		SELECT DISTINCT (PY.ID) AS IDS, PY.PURCHASE_ORDER_CODE
		  FROM PRO_PUR_ORDER_SUMMARY PY, PRO_PUR_ORDER_ITEMS PS
		 WHERE PY.PURCHASE_ORDER_CODE = PS.PURCHASE_ORDER_CODE
		   AND PY.PURCHASER_ID = PS.PURCHASER_ID
		   AND PY.SUPPLIER_ID = PS.SUPPLIER_ID
		   AND PS.ID IN
		   <foreach collection="ids" item="id" 
			open="(" separator="," close=")">
				#{id}
			</foreach>
	</select>
</mapper>