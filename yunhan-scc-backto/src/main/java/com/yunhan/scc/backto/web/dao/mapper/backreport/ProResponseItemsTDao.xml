<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	@author luohoudong
	@version 2016-7-14 9:52:28 
-->
<mapper namespace="com.yunhan.scc.backto.web.dao.mapper.backreport.ProResponseItemsTDao">

	<resultMap type="ProResponseItemsTBacktoDO" id="ProResponseItemsTResult">
			<result property="addTime" column="ADD_TIME" />
			<result property="addUserCode" column="ADD_USER_CODE" />
			<result property="availableDiscountrate" column="AVAILABLE_DISCOUNTRATE" />
			<result property="availablePrice" column="AVAILABLE_PRICE" />
			<result property="availableQty" column="AVAILABLE_QTY" />
			<result property="bookTitle" column="BOOK_TITLE" />
			<result property="dealStatus" column="DEAL_STATUS" />
			<result property="diffType" column="DIFF_TYPE" />
			<result property="discountrate" column="DISCOUNTRATE" />
			<result property="id" column="ID" />
			<result property="isbn" column="ISBN" />
			<result property="isDiffExport" column="IS_DIFF_EXPORT" />
			<result property="isForeverOosExport" column="IS_FOREVER_OOS_EXPORT" />
			<result property="isValid" column="IS_VALID" />
			<result property="notEnoughReason" column="NOT_ENOUGH_REASON" />
			<result property="orderQty" column="ORDER_QTY" />
			<result property="preSendDate" column="PRE_SEND_DATE" />
			<result property="price" column="PRICE" />
			<result property="proPurOrderItemsId" column="PRO_PUR_ORDER_ITEMS_ID" />
			<result property="purchaserCommoditiesId" column="PURCHASER_COMMODITIES_ID" />
			<result property="purchaserId" column="PURCHASER_ID" />
			<result property="purchaseOrderCode" column="PURCHASE_ORDER_CODE" />
			<result property="responseDate" column="RESPONSE_DATE" />
			<result property="responseRemark" column="RESPONSE_REMARK" />
			<result property="responseStatus" column="RESPONSE_STATUS" />
			<result property="responseType" column="RESPONSE_TYPE" />
			<result property="responseUserCode" column="RESPONSE_USER_CODE" />
			<result property="rowUniqueNo" column="ROW_UNIQUE_NO" />
			<result property="sendoutGoodsCode" column="SENDOUT_GOODS_CODE" />
			<result property="sourceType" column="SOURCE_TYPE" />
			<result property="supplierCommoditiesId" column="SUPPLIER_COMMODITIES_ID" />
			<result property="supplierId" column="SUPPLIER_ID" />
			<result property="thisSendQty" column="THIS_SEND_QTY" />
			<result property="updateTime" column="UPDATE_TIME" />
			<result property="updateUserCode" column="UPDATE_USER_CODE" />
			<result property="yunhanId" column="YUNHAN_ID" />
			<result property="yunhanOrderCode" column="YUNHAN_ORDER_CODE" />
			
			<result property="affiliateSeries" column="affiliate_series" />
			<result property="orderType" column="order_type" />
			<result property="urgentFlag" column="urgent_flag" />
			<result property="isExport" column="is_export" />
			<result property="isNew" column="is_new" />
			<result property="isImportent" column="is_importent" />
			<result property="isSuitBook" column="is_suit_book" />
			<result property="sendoutQty" column="sendout_qty" />
			<result property="receiveQty" column="receive_qty" />
			<result property="remark" column="remark" />
			<result property="sendGoodsType" column="send_goods_type" />
			
			<result property="reportPrice" column="reportPrice" />
			<result property="reportDiscountrate" column="reportDiscountrate" />
			<result property="purchaserName" column="purchaserName" />
			<result property="destination" column="destination" />
			<result property="warehouse" column="warehouse" />
			<result property="receiveAddress" column="receive_address" />
			<result property="receivePhoneno" column="receive_phoneno" />
			<result property="receiveContactUser" column="receive_contact_user" />
			<result property="respId" column="respId" />
			<result property="reportAvailableReason" column="reportAvailableReason" />
			<result property="historyRemark" column="historyRemark" />
			<result property="regularExpression" column="regular_Expression" />
	</resultMap>

	<!-- 模板回告发货列表查询  added bu luohoudong -->
	<select id="findTempSendItemsTs"  parameterType="ProResponseItemsTBacktoCondition"  resultMap="ProResponseItemsTResult">
	select 
		   resp.other_available_reason  as reportAvailableReason,
		   resp.response_remark as historyRemark,
           d.name as purchaserName,
    	   ps.destination,
    	   ps.warehouse,
    	   nvl(dc.paddr,ps.receive_address) as receive_address,
	       nvl(dc.contact_number,ps.receive_phoneno) as receive_phoneno,
	       nvl(dc.contact,ps.receive_contact_user) as receive_contact_user,
		   t.id,
		   pi.purchase_order_code, 
	       pi.yunhan_order_code,
	       nvl(pi.book_title,t.book_title) as book_title,
	       nvl(pi.isbn,t.isbn)  as isbn,
	       pi.affiliate_series,
	       ps.order_type,
	       ps.urgent_flag,
	       pi.is_export,
	       ps.is_new,
	       ps.destination,
	       ps.send_goods_type,
	       pi.is_importent,
	       pi.is_suit_book,
	       pi.price,
	       pi.discountrate,
	       nvl(pi.order_qty,0) 	 as order_qty,
	       nvl(pi.sendout_qty,0) as sendout_qty,
	       nvl(pi.receive_qty,0) as receive_qty,
	       pi.remark,
	       t.available_price,
	       t.available_discountrate,
	       t.this_send_qty,
	       t.not_enough_reason,
	       t.pre_send_date,
	       t.response_remark,
	       t.isbn,
	       t.book_title,
	       pi.id as PRO_PUR_ORDER_ITEMS_ID,
	       pi.purchaser_id,
       	   pi.supplier_id,
       	   resp_t.id as respId,
	       resp.available_price as  reportPrice,
       	   resp.available_discountrate  as  reportDiscountrate,
	       nvl(resp.response_status,0) as response_status,
	       nvl(sr.REGULAR_EXPRESSION,'none') as REGULAR_EXPRESSION
	  from pro_response_items_t t
	  left join pro_pur_order_items pi
	    on t.pro_pur_order_items_id = pi.id
	  left join pro_pur_order_summary ps 
	     on (pi.purchase_order_code=ps.purchase_order_code
	     and pi.purchaser_id=ps.purchaser_id
	     and pi.supplier_id=ps.supplier_id)
	  left join pro_response_items resp
	       on pi.id=resp.pro_pur_order_items_id and resp.RESPONSE_STATUS = 5
           AND resp.IS_VALID = 'Y'
           and resp.purchase_order_code = pi.purchase_order_code
   		   and resp.purchaser_id = pi.purchaser_id
	  left join t_department d 
     	  on pi.purchaser_id=d.sapvendorid
      left join pro_response_items resp_t
		   on pi.id = resp_t.pro_pur_order_items_id
		   and resp_t.RESPONSE_STATUS = 0
		   AND resp_t.IS_VALID = 'Y'
	  left join dc_location dc
		    on ps.warehouse=dc.code 
		    and ps.send_goods_type='1'
		left join SEND_RULE_CONFIG sr
			on (t.supplier_id = sr.SUPPLIER_ID
			and t.purchaser_id = sr.PURCHASER_ID
			and sr.is_valid='Y')
	 where 
 		 NVL(resp.ID,0) = NVL((SELECT MAX(resp2.ID) ID
               		FROM PRO_RESPONSE_ITEMS resp2
                	where	resp2.PRO_PUR_ORDER_ITEMS_ID = pi.ID
                	 	and resp2.RESPONSE_STATUS = 5
                		AND resp2.IS_VALID = 'Y'
                     	and resp2.purchase_order_code = pi.purchase_order_code
                     	and resp2.purchaser_id = pi.purchaser_id
			           ),0)
		and	t.add_user_code = '${addUserCode}'
	   	and t.sendout_goods_code=#{sendoutGoodsCode}
	</select>
	
	<!-- 模板回告发货列表查询 统计条数  added bu luohoudong -->
	<select id="findTempSendItemsTs_count"  parameterType="ProResponseItemsTBacktoCondition"  resultType="java.lang.Integer">
		select 
           count(1)
	  from pro_response_items_t t
	  left join pro_pur_order_items pi
	    on t.pro_pur_order_items_id = pi.id
	  left join pro_pur_order_summary ps 
	     on (pi.purchase_order_code=ps.purchase_order_code
	     and pi.purchaser_id=ps.purchaser_id
	     and pi.supplier_id=ps.supplier_id)
	  left join pro_response_items resp
	      on pi.id=resp.pro_pur_order_items_id and resp.RESPONSE_STATUS = 5
              AND resp.IS_VALID = 'Y'
              and resp.purchase_order_code = pi.purchase_order_code
   		      and resp.purchaser_id = pi.purchaser_id
	  left join t_department d 
     	  on pi.purchaser_id=d.sapvendorid
	 where 
 		 NVL(resp.ID,0) = NVL((SELECT MAX(resp2.ID) ID
               		FROM PRO_RESPONSE_ITEMS resp2
                	where	resp2.PRO_PUR_ORDER_ITEMS_ID = pi.ID
                	 	and resp2.RESPONSE_STATUS = 5
                		AND resp2.IS_VALID = 'Y'
                     	and resp2.purchase_order_code = pi.purchase_order_code
                     	and resp2.purchaser_id = pi.purchaser_id
			           ),0)
		and	t.add_user_code = '${addUserCode}'
	   	and t.sendout_goods_code=#{sendoutGoodsCode}
	</select>
	
	
	<!-- 模板回告  只回告列表查询  added bu luohoudong -->
	<select id="findOnlyReportItemsTs"  parameterType="ProResponseItemsTBacktoCondition"  resultMap="ProResponseItemsTResult">
		select 
		   resp.other_available_reason  as reportAvailableReason,
		   resp.response_remark as historyRemark,
    	   ps.destination,
    	   ps.warehouse,
    	   ps.receive_address,
       	   ps.receive_phoneno,
           ps.receive_contact_user,
		   t.id,
		   pi.purchase_order_code, 
	       pi.yunhan_order_code,
	       nvl(pi.book_title,t.book_title) as book_title,
	       nvl(pi.isbn,t.isbn)  as isbn,
	       pi.affiliate_series,
	       ps.order_type,
	       ps.urgent_flag,
	       ps.is_export,
	       ps.is_new,
	       ps.destination,
	       ps.send_goods_type,
	       pi.is_importent,
	       pi.is_suit_book,
	       pi.price,
	       pi.discountrate,
	       nvl(pi.order_qty,0) 	 as order_qty,
	       nvl(pi.sendout_qty,0) as sendout_qty,
	       nvl(pi.receive_qty,0) as receive_qty,
	       pi.remark,
	       t.available_price,
	       t.available_discountrate,
	       nvl(t.this_send_qty,0) as this_send_qty,
	       t.not_enough_reason,
	       t.pre_send_date,
	       t.response_remark,
	       t.isbn,
	       t.book_title,
	       pi.id as PRO_PUR_ORDER_ITEMS_ID,
	       pi.purchaser_id,
       	   pi.supplier_id,
       	   resp_t.id as respId,
	       resp.available_price as  reportPrice,
       	   resp.available_discountrate  as  reportDiscountrate,
	       nvl(resp.response_status,0) as response_status
	  from pro_response_items_t t
	  join pro_pur_order_items pi
	    on t.pro_pur_order_items_id = pi.id
	  left join pro_pur_order_summary ps 
	     on (pi.purchase_order_code=ps.purchase_order_code
	     and pi.purchaser_id=ps.purchaser_id
	     and pi.supplier_id=ps.supplier_id)
	  left join pro_response_items resp
	      on pi.id=resp.pro_pur_order_items_id
	      and resp.RESPONSE_STATUS = 5
    	  AND resp.IS_VALID = 'Y'
     left join pro_response_items resp_t
		   on pi.id = resp_t.pro_pur_order_items_id
		   and resp_t.RESPONSE_STATUS = 0
		   AND resp_t.IS_VALID = 'Y'
 		where 
 			NVL(resp.ID, 0) =
		       NVL((SELECT MAX(resp2.ID) ID
		             FROM PRO_RESPONSE_ITEMS resp2
		            where resp2.PRO_PUR_ORDER_ITEMS_ID = pi.ID
		              and resp2.RESPONSE_STATUS = 5
		              AND resp2.IS_VALID = 'Y'
		              and resp2.purchase_order_code = pi.purchase_order_code
		              and resp2.purchaser_id = pi.purchaser_id),
		           0)
 			and t.add_user_code = '${addUserCode}'
   			and t.sendout_goods_code is null
	</select>
	
	<!-- 模板回告  只回告列表统计查询  added bu luohoudong -->
	<select id="findOnlyReportItemsTs_count"  parameterType="ProResponseItemsTBacktoCondition"  resultType="java.lang.Integer">
		select 
		   count(1)
	  from pro_response_items_t t
	  join pro_pur_order_items pi
	    on t.pro_pur_order_items_id = pi.id
	  left join pro_pur_order_summary ps 
	     on (pi.purchase_order_code=ps.purchase_order_code
	     and pi.purchaser_id=ps.purchaser_id
	     and pi.supplier_id=ps.supplier_id)
	  left join pro_response_items resp
	      on pi.id=resp.pro_pur_order_items_id
	      and resp.RESPONSE_STATUS = 5
    	  AND resp.IS_VALID = 'Y'
     left join pro_response_items resp_t
		   on pi.id = resp_t.pro_pur_order_items_id
		   and resp_t.RESPONSE_STATUS = 0
		   AND resp_t.IS_VALID = 'Y'
 		where 
 			NVL(resp.ID, 0) =
		       NVL((SELECT MAX(resp2.ID) ID
		             FROM PRO_RESPONSE_ITEMS resp2
		            where resp2.PRO_PUR_ORDER_ITEMS_ID = pi.ID
		              and resp2.RESPONSE_STATUS = 5
		              AND resp2.IS_VALID = 'Y'
		              and resp2.purchase_order_code = pi.purchase_order_code
		              and resp2.purchaser_id = pi.purchaser_id),
		           0)
 			and t.add_user_code = '${addUserCode}'
   			and t.sendout_goods_code is null
	</select>
	
	<!-- 空白模板回告 查询  added bu luohoudong -->
	<select id="findBlankTempReportItemsTs"  parameterType="ProResponseItemsTBacktoCondition"  resultMap="ProResponseItemsTResult">
		select 
			t.*
  		from pro_response_items_t t
 		where t.add_user_code = '${addUserCode}'
	</select>
	
	<!-- 空白模板回告 查询统计  added bu luohoudong -->
	<select id="findBlankTempReportItemsTs_count"  parameterType="ProResponseItemsTBacktoCondition"  resultType="java.lang.Integer">
		select 
			count(1)
  		from pro_response_items_t t
 		where t.add_user_code = '${addUserCode}'
	</select>
	
	<update id="update" parameterType="ProResponseItemsTBacktoDO">
		UPDATE PRO_RESPONSE_ITEMS_T
		<set>
								<if test="addTime!=null">
									ADD_TIME =#{addTime,jdbcType=VARCHAR},
								</if>
								<if test="addUserCode!=null">
									ADD_USER_CODE =#{addUserCode,jdbcType=VARCHAR},
								</if>
								<if test="availableDiscountrate!=null">
									AVAILABLE_DISCOUNTRATE =#{availableDiscountrate,jdbcType=VARCHAR},
								</if>
								<if test="availablePrice!=null">
									AVAILABLE_PRICE =#{availablePrice,jdbcType=VARCHAR},
								</if>
								<if test="availableQty!=null">
									AVAILABLE_QTY =#{availableQty,jdbcType=VARCHAR},
								</if>
								<if test="bookTitle!=null">
									BOOK_TITLE =#{bookTitle,jdbcType=VARCHAR},
								</if>
								<if test="dealStatus!=null">
									DEAL_STATUS =#{dealStatus,jdbcType=VARCHAR},
								</if>
								<if test="diffType!=null">
									DIFF_TYPE =#{diffType,jdbcType=VARCHAR},
								</if>
								<if test="discountrate!=null">
									DISCOUNTRATE =#{discountrate,jdbcType=VARCHAR},
								</if>
								<if test="isbn!=null">
									ISBN =#{isbn,jdbcType=VARCHAR},
								</if>
								<if test="isDiffExport!=null">
									IS_DIFF_EXPORT =#{isDiffExport,jdbcType=VARCHAR},
								</if>
								<if test="isForeverOosExport!=null">
									IS_FOREVER_OOS_EXPORT =#{isForeverOosExport,jdbcType=VARCHAR},
								</if>
								<if test="isValid!=null">
									IS_VALID =#{isValid,jdbcType=VARCHAR},
								</if>
								<if test="notEnoughReason!=null">
									NOT_ENOUGH_REASON =#{notEnoughReason,jdbcType=VARCHAR},
								</if>
								<if test="orderQty!=null">
									ORDER_QTY =#{orderQty,jdbcType=VARCHAR},
								</if>
								<if test="preSendDate!=null">
									PRE_SEND_DATE =#{preSendDate,jdbcType=VARCHAR},
								</if>
								<if test="price!=null">
									PRICE =#{price,jdbcType=VARCHAR},
								</if>
								<if test="proPurOrderItemsId!=null">
									PRO_PUR_ORDER_ITEMS_ID =#{proPurOrderItemsId,jdbcType=VARCHAR},
								</if>
								<if test="purchaserCommoditiesId!=null">
									PURCHASER_COMMODITIES_ID =#{purchaserCommoditiesId,jdbcType=VARCHAR},
								</if>
								<if test="purchaserId!=null">
									PURCHASER_ID =#{purchaserId,jdbcType=VARCHAR},
								</if>
								<if test="purchaseOrderCode!=null">
									PURCHASE_ORDER_CODE =#{purchaseOrderCode,jdbcType=VARCHAR},
								</if>
								<if test="responseDate!=null">
									RESPONSE_DATE =#{responseDate,jdbcType=VARCHAR},
								</if>
								<if test="responseRemark!=null">
									RESPONSE_REMARK =#{responseRemark,jdbcType=VARCHAR},
								</if>
								<if test="responseStatus!=null">
									RESPONSE_STATUS =#{responseStatus,jdbcType=VARCHAR},
								</if>
								<if test="responseType!=null">
									RESPONSE_TYPE =#{responseType,jdbcType=VARCHAR},
								</if>
								<if test="responseUserCode!=null">
									RESPONSE_USER_CODE =#{responseUserCode,jdbcType=VARCHAR},
								</if>
								<if test="rowUniqueNo!=null">
									ROW_UNIQUE_NO =#{rowUniqueNo,jdbcType=VARCHAR},
								</if>
								<if test="sendoutGoodsCode!=null">
									SENDOUT_GOODS_CODE =#{sendoutGoodsCode,jdbcType=VARCHAR},
								</if>
								<if test="sourceType!=null">
									SOURCE_TYPE =#{sourceType,jdbcType=VARCHAR},
								</if>
								<if test="supplierCommoditiesId!=null">
									SUPPLIER_COMMODITIES_ID =#{supplierCommoditiesId,jdbcType=VARCHAR},
								</if>
								<if test="supplierId!=null">
									SUPPLIER_ID =#{supplierId,jdbcType=VARCHAR},
								</if>
								<if test="thisSendQty!=null">
									THIS_SEND_QTY =#{thisSendQty,jdbcType=VARCHAR},
								</if>
								<if test="updateTime!=null">
									UPDATE_TIME =#{updateTime,jdbcType=VARCHAR},
								</if>
								<if test="updateUserCode!=null">
									UPDATE_USER_CODE =#{updateUserCode,jdbcType=VARCHAR},
								</if>
								<if test="yunhanId!=null">
									YUNHAN_ID =#{yunhanId,jdbcType=VARCHAR},
								</if>
								<if test="yunhanOrderCode!=null">
									YUNHAN_ORDER_CODE =#{yunhanOrderCode,jdbcType=VARCHAR},
								</if>
		</set>
		<where>
				ID=#{id}   
		</where>
	</update>
	
	<insert id="save" parameterType="ProResponseItemsTBacktoDO">
		<selectKey resultType="java.lang.Long" order="BEFORE"
			keyProperty="id">
			SELECT PRO_RESPONSE_ITEMS_T_SEQ.nextval AS 
															id
														 FROM dual
		</selectKey>
		INSERT INTO  PRO_RESPONSE_ITEMS_T 
		(
				<if test="addTime!=null">
					ADD_TIME,
				</if>
				<if test="addUserCode!=null">
					ADD_USER_CODE,
				</if>
				<if test="availableDiscountrate!=null">
					AVAILABLE_DISCOUNTRATE,
				</if>
				<if test="availablePrice!=null">
					AVAILABLE_PRICE,
				</if>
				<if test="availableQty!=null">
					AVAILABLE_QTY,
				</if>
				<if test="bookTitle!=null">
					BOOK_TITLE,
				</if>
				<if test="dealStatus!=null">
					DEAL_STATUS,
				</if>
				<if test="diffType!=null">
					DIFF_TYPE,
				</if>
				<if test="discountrate!=null">
					DISCOUNTRATE,
				</if>
				<if test="isbn!=null">
					ISBN,
				</if>
				<if test="isDiffExport!=null">
					IS_DIFF_EXPORT,
				</if>
				<if test="isForeverOosExport!=null">
					IS_FOREVER_OOS_EXPORT,
				</if>
				<if test="isValid!=null">
					IS_VALID,
				</if>
				<if test="notEnoughReason!=null">
					NOT_ENOUGH_REASON,
				</if>
				<if test="orderQty!=null">
					ORDER_QTY,
				</if>
				<if test="preSendDate!=null">
					PRE_SEND_DATE,
				</if>
				<if test="price!=null">
					PRICE,
				</if>
				<if test="proPurOrderItemsId!=null">
					PRO_PUR_ORDER_ITEMS_ID,
				</if>
				<if test="purchaserCommoditiesId!=null">
					PURCHASER_COMMODITIES_ID,
				</if>
				<if test="purchaserId!=null">
					PURCHASER_ID,
				</if>
				<if test="purchaseOrderCode!=null">
					PURCHASE_ORDER_CODE,
				</if>
				<if test="responseDate!=null">
					RESPONSE_DATE,
				</if>
				<if test="responseRemark!=null">
					RESPONSE_REMARK,
				</if>
				<if test="responseStatus!=null">
					RESPONSE_STATUS,
				</if>
				<if test="responseType!=null">
					RESPONSE_TYPE,
				</if>
				<if test="responseUserCode!=null">
					RESPONSE_USER_CODE,
				</if>
				<if test="rowUniqueNo!=null">
					ROW_UNIQUE_NO,
				</if>
				<if test="sendoutGoodsCode!=null">
					SENDOUT_GOODS_CODE,
				</if>
				<if test="sourceType!=null">
					SOURCE_TYPE,
				</if>
				<if test="supplierCommoditiesId!=null">
					SUPPLIER_COMMODITIES_ID,
				</if>
				<if test="supplierId!=null">
					SUPPLIER_ID,
				</if>
				<if test="thisSendQty!=null">
					THIS_SEND_QTY,
				</if>
				<if test="updateTime!=null">
					UPDATE_TIME,
				</if>
				<if test="updateUserCode!=null">
					UPDATE_USER_CODE,
				</if>
				<if test="yunhanId!=null">
					YUNHAN_ID,
				</if>
				<if test="yunhanOrderCode!=null">
					YUNHAN_ORDER_CODE,
				</if>
					ID
		) VALUES (
				<if test="addTime!=null">
					#{addTime,jdbcType=VARCHAR},
				</if>
				<if test="addUserCode!=null">
					#{addUserCode,jdbcType=VARCHAR},
				</if>
				<if test="availableDiscountrate!=null">
					#{availableDiscountrate,jdbcType=VARCHAR},
				</if>
				<if test="availablePrice!=null">
					#{availablePrice,jdbcType=VARCHAR},
				</if>
				<if test="availableQty!=null">
					#{availableQty,jdbcType=VARCHAR},
				</if>
				<if test="bookTitle!=null">
					#{bookTitle,jdbcType=VARCHAR},
				</if>
				<if test="dealStatus!=null">
					#{dealStatus,jdbcType=VARCHAR},
				</if>
				<if test="diffType!=null">
					#{diffType,jdbcType=VARCHAR},
				</if>
				<if test="discountrate!=null">
					#{discountrate,jdbcType=VARCHAR},
				</if>
				<if test="isbn!=null">
					#{isbn,jdbcType=VARCHAR},
				</if>
				<if test="isDiffExport!=null">
					#{isDiffExport,jdbcType=VARCHAR},
				</if>
				<if test="isForeverOosExport!=null">
					#{isForeverOosExport,jdbcType=VARCHAR},
				</if>
				<if test="isValid!=null">
					#{isValid,jdbcType=VARCHAR},
				</if>
				<if test="notEnoughReason!=null">
					#{notEnoughReason,jdbcType=VARCHAR},
				</if>
				<if test="orderQty!=null">
					#{orderQty,jdbcType=VARCHAR},
				</if>
				<if test="preSendDate!=null">
					#{preSendDate,jdbcType=VARCHAR},
				</if>
				<if test="price!=null">
					#{price,jdbcType=VARCHAR},
				</if>
				<if test="proPurOrderItemsId!=null">
					#{proPurOrderItemsId,jdbcType=VARCHAR},
				</if>
				<if test="purchaserCommoditiesId!=null">
					#{purchaserCommoditiesId,jdbcType=VARCHAR},
				</if>
				<if test="purchaserId!=null">
					#{purchaserId,jdbcType=VARCHAR},
				</if>
				<if test="purchaseOrderCode!=null">
					#{purchaseOrderCode,jdbcType=VARCHAR},
				</if>
				<if test="responseDate!=null">
					#{responseDate,jdbcType=VARCHAR},
				</if>
				<if test="responseRemark!=null">
					#{responseRemark,jdbcType=VARCHAR},
				</if>
				<if test="responseStatus!=null">
					#{responseStatus,jdbcType=VARCHAR},
				</if>
				<if test="responseType!=null">
					#{responseType,jdbcType=VARCHAR},
				</if>
				<if test="responseUserCode!=null">
					#{responseUserCode,jdbcType=VARCHAR},
				</if>
				<if test="rowUniqueNo!=null">
					#{rowUniqueNo,jdbcType=VARCHAR},
				</if>
				<if test="sendoutGoodsCode!=null">
					#{sendoutGoodsCode,jdbcType=VARCHAR},
				</if>
				<if test="sourceType!=null">
					#{sourceType,jdbcType=VARCHAR},
				</if>
				<if test="supplierCommoditiesId!=null">
					#{supplierCommoditiesId,jdbcType=VARCHAR},
				</if>
				<if test="supplierId!=null">
					#{supplierId,jdbcType=VARCHAR},
				</if>
				<if test="thisSendQty!=null">
					#{thisSendQty,jdbcType=VARCHAR},
				</if>
				<if test="updateTime!=null">
					#{updateTime,jdbcType=VARCHAR},
				</if>
				<if test="updateUserCode!=null">
					#{updateUserCode,jdbcType=VARCHAR},
				</if>
				<if test="yunhanId!=null">
					#{yunhanId,jdbcType=VARCHAR},
				</if>
				<if test="yunhanOrderCode!=null">
					#{yunhanOrderCode,jdbcType=VARCHAR},
				</if>
					#{id}
		)
	</insert>
	
	<delete id="delete" parameterType="ProResponseItemsTBacktoDO">
		DELETE FROM  PRO_RESPONSE_ITEMS_T  WHERE 
			ID=#{id}   
	</delete>
	
	<!-- 根据用户名删除临时回告信息 added by luohoudong-->
	<delete id="delProResponseItemsTsByUserName" >
		DELETE FROM  PRO_RESPONSE_ITEMS_T  WHERE 
			ADD_USER_CODE=#{addUserCode}  
			<if test="flag!=null">
			AND SENDOUT_GOODS_CODE IS NULL
			</if> 
	</delete>
	
	<!-- 根据用户名和发货单号删除临时回告信息 added by luohoudong-->
	<delete id="delProResponseItemsTsByUserNameAndSendCode" >
		DELETE FROM  PRO_RESPONSE_ITEMS_T  WHERE 
			ADD_USER_CODE=#{addUserCode}  AND SENDOUT_GOODS_CODE=#{sendCode}
	</delete>
	
	<!-- 根据创建人编码查询出可以模板发货的发货单号   added by luohoudong -->
	<select id="findProResponseItemsTSendoutGoods" resultType="java.lang.String">
	select 
		t.sendout_goods_code
  	from pro_response_items_t t
 	where t.add_user_code = #{addUserCode}
   		and t.sendout_goods_code is not null
   	group by t.sendout_goods_code
	</select>

</mapper>